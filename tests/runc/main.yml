---
# vim: set ft=ansible:
#
# !!!NOTE!!! This playbook was tested using Ansible 2.2; it is recommended
# that the same version is used.
#
# This playbook is a basic functional test for runc.  It configures the
# host with the required packages and libraries to run the runc upstream
# tests found at https://fedorapeople.org/cgit/caiqian/public_git/runctst.git
#
#  - runc create
#  - runc delete
#  - runc exec
#  - runc init
#  - runc kill
#  - runc list
#  - runc ps
#  - runc run
#  - runc start
#  - runc state
#  - runc update
#

- name: runc - Setup
  hosts: all
  become: yes

  tags:
    - setup

  vars_files:
    - vars.yml

  roles:
    # This playbook requires Ansible 2.2 and an Atomic Host
    - role: ansible_version_check
      avc_major: "2"
      avc_minor: "2"
      tags:
        - ansible_version_check

    - role: runc_version_check
      runc_version: "{{ g_runc_version }}"
      tags:
        - runc_version_check

    # Subscribe if the system is RHEL
    - role: redhat_subscription
      when: ansible_distribution == 'RedHat'
      tags:
        - redhat_subscription

    - role: rpm_ostree_install
      packages: 'gcc python-devel'
      reboot: false
      when: "ansible_distribution == 'RedHat' or 'CentOS' in ansible_distribution"
      tags:
        - rpm_ostree_install

    - role: rpm_ostree_install
      packages: 'gcc python-devel redhat-rpm-config'
      reboot: false
      when: ansible_distribution == 'Fedora'
      tags:
        - rpm_ostree_install_fedora

    - role: reboot
      tags:
        - reboot

  post_tasks:
    - name: Turn on user namespaces
      shell: grubby --args="user_namespace.enable=1" --update-kernel="$(grubby --default-kernel)"
      when: "'CentOS' in ansible_distribution or ansible_distribution == 'RedHat'"

    - include: '../../common/ans_reboot.yml'
      when: "'CentOS' in ansible_distribution or ansible_distribution == 'RedHat'"

    - include: 'roles/ostree_admin_unlock/tasks/main.yml'

    - name: Get upstream test
      get_url:
        url: "{{ g_upstream_test }}"
        dest: "{{ g_base_path }}"

    - name: Get pip
      get_url:
        url: "{{ g_pip_url }}"
        dest: "{{ g_base_path }}"

    - name: Install pip
      command: python {{ g_base_path}}/get-pip.py

    - name: Install psutil
      command: pip install psutil

    - block:
        - name: Replace selinux contexts for Fedora
          replace:
            dest: "{{ g_script_path }}"
            regexp: "^selabel.*"
            replace: "selabel = 'system_u:system_r:container_t:s0:c1,c2'"

        - name: Replace molabel
          replace:
             dest: "{{ g_script_path }}"
             regexp: "^molabel.*"
             replace: "molabel = 'system_u:object_r:container_file_t:s0:c1,c2'"

        - name: Add --signature-verification=false to docker config
          replace:
            dest: /etc/sysconfig/docker
            regexp: "^OPTIONS='"
            replace: "OPTIONS='--signature-verification=false "

        - name: Restart docker service
          service:
            name: docker
            state: restarted
      when: ansible_distribution == 'Fedora'

- name: runc - Run upstream test
  hosts: all
  become: yes

  tags:
    - upstream_tests

  vars_files:
    - vars.yml

  tasks:
    - name: Run upstream tests
      shell: python -c "import pty; exit(pty.spawn(['python', '{{ g_script_path }}']))"
      register: result
      failed_when: >
        'exit status 1' in result.stdout or
        'error' in result.stdout or
        'Traceback' in result.stdout
