---
# vim: set ft=ansible:
#
# !!!NOTE!!! This playbook was tested using Ansible 2.2; it is recommended
# that the same version is used.
#
# This playbook tests the basic functions of docker or docker-latest. These
# functions include:
#   - docker build
#   - docker images
#   - docker ps
#   - docker pull
#   - docker rm
#   - docker rmi
#   - docker run
#   - docker start
#   - docker stop
#
# To test docker-current, set the g_docker_latest variable to false in the
# vars.yml file.
#

- name: Docker - Setup
  hosts: all
  become: yes

  tags:
    - setup

  vars_files:
    - vars.yml


  pre_tasks:
    - name: Check for docker-latest package if running against docker-latest
      command: rpm -qa
      register: pkgs
      when: g_docker_latest

    - name: Fail if docker latest is not installed
      fail:
        msg: "This test is not valid because docker-latest is not installed"
      when:
        - g_docker_latest
        - "'docker-latest' not in pkgs.stdout"

  roles:
    # This playbook requires Ansible 2.2 and an Atomic Host
    - role: ansible_version_check
      avc_major: "2"
      avc_minor: "2"
      tags:
        - ansible_version_check

    # Subscribe if the system is RHEL
    - role: redhat_subscription
      when: ansible_distribution == 'RedHat'
      tags:
        - redhat_subscription

- name: Docker - Functional Tests
  hosts: all
  become: yes

  tags:
    - functional

  vars_files:
    - vars.yml

  roles:
    - role: osname_set_fact
      tags:
        - osname_set_fact

    - role: docker_remove_all
      tags:
        - docker_remove_all

    - role: docker_latest_setup
      tags:
        - docker_latest_setup
      when: g_docker_latest

    - role: docker_pull_base_image
      tags:
        - docker_pull_base_image

    - role: docker_build_httpd
      tags:
        - docker_build_httpd

    - role: docker_run_httpd
      tags:
        - docker_run_httpd

    - role: docker_rm_httpd_container
      tags:
        - docker_rm_httpd_container

    - role: docker_rmi_httpd_image
      tags:
        - docker_rmi_httpd_image

- name: Docker - Cleanup
  hosts: all
  become: yes

  tags:
    - cleanup

  vars_files:
    - vars.yml

  pre_tasks:
    - block:
      - name: Stop and disable docker-latest
        service:
          name: docker-latest
          enabled: no
          state: stopped

      - name: Revert docker-latest binary
        blockinfile:
          dest: /etc/sysconfig/docker
          block: |
            #DOCKERBINARY=/usr/bin/docker-latest
            #DOCKERDBINARY=/usr/bin/dockerd-latest
            #DOCKER_CONTAINERD_BINARY=/usr/bin/docker-containerd-latest
            #DOCKER_CONTAINERD_SHIM_BINARY=/usr/bin/docker-containerd-shim-latest

      - name: Re-enable docker
        service:
          name: docker
          enabled: yes
          state: started
      when: g_docker_latest

  roles:
    - role: docker_remove_all
      tags:
        - docker_remove_all

    - role: redhat_unsubscribe
      when: ansible_distribution == 'RedHat'
      tags:
        - redhat_unsubscribe
