---
# vim: set ft=ansible:
# set ft=ansible
#

- name: Fail if variables are not defined
  when: base_images is undefined or image_names is undefined
  fail:
    msg: |
      Required variables are not defined.
      Please check tests/docker-build-httpd/vars.yml.

- name: Fail if RHEL variables are not defined
  when:
    - (rhel_base_images is undefined or rhel_image_names is undefined)
    - ansible_distribution == "RedHat"
  fail:
    msg: |
      Required RHEL variables are not defined.
      Please check tests/docker-build-httpd/vars.yml

- name: Fail if RHEL variables are not defined
  when: (rhel_base_images is undefined or rhel_image_names is undefined) and
        ansible_distribution == "RedHat"
  fail:
    msg: "Required RHEL variables are not defined.  Please check tests/docker-build-httpd/vars.yml"

# I would have used a 'block' of 'roles' here, but that is not
# compatible with the 'with_items' loop control, so I stuck all
# the tasks into a single role file and used an 'include_tasks:'
# statement on that file.
#
# Added the ability to skip broken images with the 'cli_skipped_images'
# variable.  This can be set via the CLI like so:
# ansible-playbook -e "cli_skipped_images=busybox_httpd,debian_httpd"
#
- include_tasks: tasks/build_run_remove.yml
  vars:
    base_dir: "{{ working_dir }}"
    image_name: "{{ item }}"
    skipped_images: "{{ cli_skipped_images | default('') }}"
  with_items: "{{ image_names }}"

- when: ansible_distribution == "RedHat"
  include_tasks: tasks/build_run_remove.yml
  vars:
    base_dir: "{{ working_dir }}"
    image_name: "{{ item }}"
    skipped_images: "{{ cli_skipped_images | default('') }}"
  with_items: "{{ rhel_image_names }}"
