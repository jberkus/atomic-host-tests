---
# vim: set ft=ansible:
#
- import_role:
    name: rpm_ostree_cleanup_all

- import_role:
    name: rpm_ostree_install
  vars:
    roi_packages: "{{ g_pkg }}"
    roi_reboot: false

- import_role:
    name: rpm_ostree_livefs

# use include_role to get right variable values
- include_role:
    name: rpm_ostree_install_verify
  vars:
    roiv_package_name: "{{ g_pkg }}"
    roiv_status_check: false

# rol_base_commit and rol_livefs_commit come from the rpm_ostree_livefs role
# deployment information
- import_role:
    name: rpm_ostree_status_verify
  vars:
    num_deployments: 3
    deployment: 1
    expected:
      booted: true
      checksum: "{{ rol_base_commit }}"
      live-replaced: "{{ rol_livefs_commit }}"

- import_role:
    name: rpm_ostree_status_verify
  vars:
    deployment: 0
    expected:
      booted: false
      checksum: "{{ rol_livefs_commit }}"
      packages:
        - "{{ g_pkg }}"

- import_role:
    name: rpm_ostree_status_verify
  vars:
    deployment: 2
    expected:
      booted: false
      checksum: "{{ rol_base_commit }}"
      packages: []

# Reboot and check that the deployment is now a typical package layered
# deployment
- import_role:
    name: reboot

# use include_role to get right variable values
- include_role:
    name: rpm_ostree_install_verify
  vars:
    roiv_package_name: "{{ g_pkg }}"
    roiv_status_check: false

- import_role:
    name: rpm_ostree_status_verify
  vars:
    deployment: 0
    expected:
      booted: true
      base-checksum: "{{ rol_base_commit }}"
      checksum: "{{ rol_livefs_commit }}"
      packages:
        - "{{ g_pkg }}"

- import_role:
    name: rpm_ostree_status_verify
  vars:
    deployment: 1
    expected:
      booted: false
      checksum: "{{ rol_base_commit }}"
      live-replaced: "{{ rol_livefs_commit }}"

- import_role:
    name: rpm_ostree_status_verify
  vars:
    deployment: 2
    expected:
      booted: false
      checksum: "{{ rol_base_commit }}"
      packages: []

# Rollback twice to get to the original deployment
- import_role:
    name: rpm_ostree_rollback

- import_role:
    name: rpm_ostree_rollback

# Reboot and verify that the system is back to the original deployment
# without livefs or layered packages
- import_role:
    name: reboot

- import_role:
    name: rpm_ostree_uninstall_verify
  vars:
    rouv_package_name: "{{ g_pkg }}"
    rouv_status_check: false

- import_role:
    name: rpm_ostree_status_verify
  vars:
    deployment: 0
    expected:
      booted: true
      checksum: "{{ rol_base_commit }}"
      packages: []

- import_role:
    name: rpm_ostree_status_verify
  vars:
    deployment: 1
    expected:
      booted: false
      checksum: "{{ rol_base_commit }}"
      live-replaced: "{{ rol_livefs_commit }}"

- import_role:
    name: rpm_ostree_status_verify
  vars:
    deployment: 2
    expected:
      booted: false
      base-checksum: "{{ rol_base_commit }}"
      checksum: "{{ rol_livefs_commit }}"
      packages:
       - "{{ g_pkg }}"

- import_role:
    name: rpm_ostree_cleanup_all
