---
# vim: set ft=ansible:
#
# A task for registering via `subscription-manager`.  This role will
# revert the refspec in the origin file if other RHEL streams are used.
#
# It reads a CSV file to extract the values for the options below.
#
# Expects the following variable to be defined:
#  - subscription_file
#
# NOTE: The 'subscription_file' variable lives in roles/redhat_subscription/vars/subscription.yml
#
# NOTE: It is suggested that the value of `subscription_file` point to a file
#       that is in the files directory of (same directory the tasks directory)
#       is located) a role.  This will reduce any difficulties trying to
#       determine the right path for the CSV file.
#
#       ../files/subscription_data.csv

# Below we use string formatting to use a variable as the name of the file in
# the lookup()
# via http://stackoverflow.com/a/34239020

  - name: Determine is_atomic True/False
    include: '../../common/set_is_atomic.yml'

  - block:

    - name: Get origin file
      command: ostree admin --print-current-dir
      register: origin_file

    - name: Get refspec from origin file
      command: grep refspec {{ origin_file.stdout }}.origin
      register: refspec

    when: is_atomic

  - name: Fail if subscription_file is not defined
    fail:
      msg: "subscription_file is not defined!"
    when: subscription_file is not defined
    run_once: true

  - name: Register with subscription-manager
    command: >
      subscription-manager register
      --baseurl="{{ lookup('csvfile', 'baseurl file={} delimiter=,'.format(subscription_file)) }}"
      --serverurl="{{ lookup('csvfile', 'serverurl file={} delimiter=,'.format(subscription_file)) }}"
      --username="$USERNAME"
      --password="$PASSWORD"
      {{ lookup('csvfile', 'extra file={} default='' delimiter=,'.format(subscription_file)) }}
    environment:
      USERNAME: "{{ lookup('csvfile', 'username file={} delimiter=,'.format(subscription_file)) }}"
      PASSWORD: "{{ lookup('csvfile', 'password file={} delimiter=,'.format(subscription_file)) }}"
    register: result
    until: result.rc == 0
    retries: 3
    delay: 5

  - name: disable all repos
    command: subscription-manager repos --disable=*

  - name: enable server, optional, and extras repos
    command: >
      subscription-manager repos
      --enable rhel-7-server-rpms
      --enable rhel-7-server-optional-rpms
      --enable rhel-7-server-extras-rpms

  - name: Mask and stop rhsmcertd
    shell: >
      systemctl mask rhsmcertd && systemctl stop rhsmcertd

  - block:

    - name: Revert refspec in origin after susbcription if it not the default refspec
      replace:
        dest: "{{ origin_file.stdout }}.origin"
        regexp: '^refspec.*$'
        replace: "{{ refspec.stdout }}"
      when: refspec.stdout.find("refspec=rhel-atomic-host") == -1

    - name: Remove unconfigured state in origin file
      lineinfile:
        dest: "{{ origin_file.stdout }}.origin"
        regexp: '^unconfigured-state.*$'
        state: absent

    when: is_atomic
