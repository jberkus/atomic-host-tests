---
# vim: set ft=ansible:
#
# NOTE: This role should only be used on RHEL systems
#
# We get the neccessary info to insert the 'unconfigured-state' field into the origin
# file only when we need to.  Otherwise, we just use the sub-man command to remove
# all the subscriptions.
#
- block:
  - name: Get the current commit to find the correct origin file to manipulate later...
    command: rpm-ostree status --json
    register: rpm_output

  - name: Convert deployment information into jinja2 json
    set_fact:
      json: "{{ rpm_output.stdout|from_json }}"

  - name: Set version and commit if deployment 0 is booted
    set_fact:
      booted_commit: "{{ json['deployments'][0]['checksum'] }}"
    when: json['deployments'][0] is defined and json['deployments'][0]['booted']

  - name: Set version and commit if deployment 1 is booted
    set_fact:
      booted_commit: "{{ json['deployments'][1]['checksum'] }}"
    when: json['deployments'][1] is defined and json['deployments'][1]['booted']
  when:
    - unconfigured_state is defined
    - unconfigured_state

# we've seen the remove command return 70 even though it was successful
- name: Remove all subscriptions locally
  command: subscription-manager remove --all
  register: subman_remove
  failed_when:
    - subman_remove.rc != 0
    - subman_remove.rc != 70

- name: Unregister from remote service
  command: subscription-manager unregister

- name: Insert 'unconfigured-state' field
  lineinfile:
    dest: /ostree/deploy/rhel-atomic-host/deploy/{{ booted_commit }}.0.origin
    line: 'unconfigured-state=This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.'
    insertafter: EOF
  when:
    - unconfigured_state is defined
    - unconfigured_state
