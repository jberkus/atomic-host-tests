---
# vim: set ft=ansible:
# role: rpm_ostree_uninstall
#
# This role uninstalls packages using rpm-ostree uninstall
#
# Parameters:
#  rou_packages - string of one or more packages separated by a space
#                 or use the 'all' keyword to uninstall everything
#  rou_reboot - boolean - pass -r flag to install command
#

- name: Fail if no packages specified
  fail:
    msg: "No packages specified"
  when: rou_packages is undefined

- name: Fail if reboot is undefined
  fail:
    msg: "Reboot is not defined"
  when: rou_reboot is undefined

- block:
    - name: Get rpm-ostree status
      command: rpm-ostree status --json
      register: ros

    - name: Convert to JSON
      set_fact:
        ros_json: "{{ ros.stdout|from_json }}"

    - name: Set ros variable if deployment 0 is booted
      set_fact:
        ros_booted: "{{ ros_json['deployments'][0] }}"
        ros_not_booted: "{{ ros_json['deployments'][1] if ros_json['deployments'][1] is defined else false }}"
      when: ros_json['deployments'][0] is defined and ros_json['deployments'][0]['booted']

    - name: Set ros variable if deployment 1 is booted
      set_fact:
        ros_booted: "{{ ros_json['deployments'][1] }}"
        ros_not_booted: "{{ ros_json['deployments'][0] if ros_json['deployments'][0] is defined else false }}"
      when: ros_json['deployments'][1] is defined and ros_json['deployments'][1]['booted']

    # If the 'packages' key has a value, we create a list of packages to
    # uninstall, otherwise skip it
    - name: Get all installed packages
      set_fact:
        all_installed: "{{ ros_booted['packages']|join(' ') }}"
      when: ros_booted['packages']|length > 0
  when: rou_packages == "all"

# Check to see if 'all_installed' was defined above, otherwise we use the
# original value of 'packages'.  It could be 'all', which means we want to
# uninstall all packages but there were no packages actually installed.
#
# Hat tip to @mike-nguyen for the logic to do this
- name: Setup 'rm_packages' variable
  set_fact:
    rm_packages: "{{ all_installed if all_installed is defined else rou_packages }}"

- name: Uninstall {{ rm_packages }}
  command: rpm-ostree uninstall {{ rm_packages }}
  when: not rou_reboot and rm_packages != "all"

- name: Uninstall {{ rm_packages }} and reboot
  command: rpm-ostree uninstall {{ rm_packages }} -r
  async: 60
  poll: 0
  when: rou_reboot and rm_packages != "all"
  ignore_errors: true

- include: ../../../common/ans_reboot.yml
  vars:
    skip_shutdown: true # shutdown was already initiated
  when: rou_reboot and rm_packages != "all"
