---
# vim: set ft=ansible:
# role: rpm_ostree_install_verify
#
# This role verifies that a package is installed after rpm-ostree install
#  by checking the package name is in rpm-ostree status output and verifying
#  that the binary is available by using which.
#
# Parameter:
#   roiv_package_name - name of a single package
#   roiv_binary_name - name of binary to check for (optional)
#
# Requirements:
#  This role must be run after the reboot following rpm-ostree install of a package
#
# !!! WARNING!!!
#   If you plan on using this role multiple times in a playbook, you should
#   explicitly provide values for 'roiv_package_name' and 'roiv_binary_name'
#   in order to avoid existing values in the playbook namespace to be reused
#   across the roles.
#
- name: Fail if no package specified
  fail:
    msg: "No packages specified"
  when: roiv_package_name is undefined

# The 'binary' fact can be set to something other than the package name
# if needed
- name: Setup binary fact
  set_fact:
    roiv_binary_name: "{{ roiv_binary_name if roiv_binary_name is defined else roiv_package_name }}"

- name: Get rpm-ostree status --json output
  command: rpm-ostree status --json
  register: installed

- name: Convert rpm-ostree status output to jinja2 json
  set_fact:
    installed_json: "{{ installed.stdout | from_json }}"

- name: Set packages when deployment 0 is booted
  set_fact:
    installed_pkgs: "{{ installed_json['deployments'][0]['packages'] }}"
  when: installed_json['deployments'][0]['packages'] is defined and installed_json['deployments'][0]['booted']

- name: Set packages when deployment 1 is booted
  set_fact:
    installed_pkgs: "{{ installed_json['deployments'][1]['packages'] }}"
  when: installed_json['deployments'][1]['packages'] is defined and installed_json['deployments'][1]['booted']

- name: Fail if {{ roiv_package_name }} is not in rpm-ostree status output
  fail:
    msg: "{{ roiv_package_name }} not in rpm-ostree status output"
  when: "'{{ roiv_package_name }}' not in installed_pkgs"

- name: Check for {{ roiv_binary_name }} binary
  command: command -v {{ roiv_binary_name }}

- name: Check {{ roiv_package_name }} in rpmdb
  command: rpm -q {{ roiv_package_name }}
