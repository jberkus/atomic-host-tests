---
# vim: set ft=ansible:
# role: rpm_ostree_install_verify
#
# This role verifies that a package is installed after rpm-ostree install
#  by checking the package name is in rpm-ostree status output and verifying
#  that the binary is available by using which.
#
# Parameter:
#   package - name of a single package
#   binary - name of binary to check for (optional)
#
# Requirements:
#  This role must be run after the reboot following rpm-ostree install of a package
#

- name: Fail if no package specified
  fail:
    msg: "No packages specified"
  when: package is undefined

# The 'binary' fact can be set to something other than the package name
# if needed
- name: Setup binary fact
  set_fact:
    bin: "{{ binary if binary is defined else package }}"

- name: Get rpm-ostree status --json output
  command: rpm-ostree status --json
  register: installed

- name: Convert rpm-ostree status output to jinja2 json
  set_fact:
    installed_json: "{{ installed.stdout | from_json }}"

- name: Set packages when deployment 0 is booted
  set_fact:
    installed_pkgs: "{{ installed_json['deployments'][0]['packages'] }}"
  when: installed_json['deployments'][0]['packages'] is defined and installed_json['deployments'][0]['booted']

- name: Set packages when deployment 1 is booted
  set_fact:
    installed_pkgs: "{{ installed_json['deployments'][1]['packages'] }}"
  when: installed_json['deployments'][1]['packages'] is defined and installed_json['deployments'][1]['booted']

- name: Fail if {{ package }} is not in rpm-ostree status output
  fail:
    msg: "{{ package }} not in rpm-ostree status output"
  when: "'{{ package }}' not in installed_pkgs"

- name: Check for {{ bin }} binary
  command: command -v {{ bin }}

- name: Check {{ package }} in rpmdb
  command: rpm -q {{ package }}
