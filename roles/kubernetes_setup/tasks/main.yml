---
#
#  This role sets up kubernetes apiserver, controller-mgr, and scheduler pods
#
  - name: pull kubernetes api-server, controller-mgr, scheduler
    command: docker pull registry.access.redhat.com/rhel7/{{ item }}
    register: pull
    failed_when: "'registry.access.redhat.com/rhel7/{{ item }}' not in pull.stdout"
    with_items:
      - kubernetes-apiserver
      - kubernetes-controller-mgr
      - kubernetes-scheduler

  - name: make db directory
    file: path=/etc/kubernetes/manifests state=directory mode=0755

  - name: copy apiserver-pod.json, controller-mgr-pod.json, scheduler-pod.json
    copy:
      src=roles/kubernetes_setup/files/{{ item }}
      dest=/etc/kubernetes/manifests
      owner=root
      group=root
      mode=0644
    with_items:
      - apiserver-pod.json
      - controller-mgr-pod.json
      - scheduler-pod.json

  # Thank you based Google gods
  # https://groups.google.com/d/msg/ansible-project/JvHfchsgRaU/Vw_CzBbvadgJ
  #
  # Shoddy explanation of regexp:
  #   - open of capture group 1: matched by (
  #   - <startofline>: matched by ^
  #   - the string "KUBELET_ARGS=": matched literally (double quote is escaped)
  #   - any characters after above string: matched by .*
  #   - close of capture group 1: matched by )
  #   - the closing " char: matched by \"
  #   - any spaces/tabs: matched by \s*
  #   - <endofline>: matched by $
  #
  # The capture group 1 is referred to as \1 in the 'line:' statement and
  # will be used as the begining of the line to be inserted into the file.
  # Thus, any exiting values to KUBELET_ARGS are preserved and the two
  # new options (--register-node and --pod-manifest-path) are cleanly
  # appended.
  - name: add kubelet args
    lineinfile:
      dest: /etc/kubernetes/kubelet
      backup: true
      backrefs: true
      regexp: '(^KUBELET_ARGS=\".*)\"\s*$'
      line: '\1 --register-node=true --pod-manifest-path=/etc/kubernetes/manifests/"'

  - name: stop docker, etcd, kube-proxy, kubelet
    service:
      name={{ item }}
      state=stopped
    with_items:
      - docker
      - etcd
      - kube-proxy
      - kubelet

  - name: start docker, etcd, kube-proxy, kubelet
    service:
      name={{ item }}
      state=started
    with_items:
      - docker
      - etcd
      - kube-proxy
      - kubelet


  - name: enable docker, etcd, kube-proxy, kubelet
    service:
      name={{ item }}
      enabled=yes
    with_items:
      - docker
      - etcd
      - kube-proxy
      - kubelet

  - name: stop docker, kube-proxy.service, kubelet.service
    service:
      name={{ item }}
      state=stopped
    with_items:
      - docker
      - kube-proxy.service
      - kubelet.service

  - name: start docker, kube-proxy.service, kubelet.service
    service:
      name={{ item }}
      state=started
    with_items:
      - docker
      - kube-proxy.service
      - kubelet.service

  - name: enable docker, kube-proxy.service, kubelet.service
    service:
      name={{ item }}
      enabled=yes
    with_items:
      - docker
      - kube-proxy.service
      - kubelet.service

  - name: test etcd
    command: curl http://localhost:2379/version
