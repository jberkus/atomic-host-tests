---
# vim: set ft=ansible:
#
#   This role verifies the atomic installation functionality through
#   the installation of cockpit container.  The cockpit container will
#   create a file /etc/pam.d/cockpit  when installed and will
#   remove the file when uninstalled.  This criteria will be used to
#   validate the install/uninstall.
#
#   Commands tested:
#   - atomic install
#   - atomic run
#   - atomic uninstall
#
- name: Set cockpit container name for RHELAH
  set_fact:
    cockpit_cname: "registry.access.redhat.com/rhel7/cockpit-ws:latest"
  when: ansible_distribution == "RedHat"

- name: Set cockpit container name for Fedora/CentOS
  set_fact:
    cockpit_cname: "docker.io/cockpit/ws:latest"
  when: ('CentOS' in ansible_distribution) or ansible_distribution == "Fedora"

- name: Pull the cockpit container for inspection
  command: docker pull {{ cockpit_cname }}

- name: Get the version of the cockpit-ws rpm in the container
  command: docker run --rm {{ cockpit_cname }} rpm --queryformat '%{VERSION}\n' -q cockpit-ws
  register: cockpit_version

- name: Install cockpit container
  command: atomic install {{ cockpit_cname }}
  when: "{{ cockpit_version|int }} > 126"

- name: Install cockpit container (interactive)
  shell: python -c "import pty; pty.spawn(['atomic', 'install', '{{ cockpit_cname }}'])"
  when: "{{ cockpit_version|int }} <= 126"

- name: Check for /etc/pam.d/cockpit
  stat:
    path: /etc/pam.d/cockpit
  register: install_file

- name: Fail if /etc/pam.d/cockpit file is not found
  fail:
    msg: "Cockpit installation failed"
  when: install_file.stat.exists == False

- name: Run cockpit container
  command: atomic run {{ cockpit_cname }}

- name: Verify port 9090 is open
  wait_for:
    port: 9090
    timeout: 30

- name: Verify cockpit webpage is up
  shell: curl -k "https://localhost:9090" | grep "Log in"

- name: Uninstall cockpit container
  shell: atomic uninstall {{ cockpit_cname }}
  when: "{{ cockpit_version|int }} > 126"

- name: Uninstall cockpit container (interactive)
  shell: python -c "import pty; pty.spawn(['atomic', 'uninstall', '{{ cockpit_cname }}'])"
  when: "{{ cockpit_version|int }} <= 126"

- name: Check for /etc/pam.d/cockpit file
  stat:
    path: /etc/pam.d/cockpit
  register: uninstall_file

- name: Fail if /etc/pam.d/cockpit file is found
  fail:
    msg: "Cockpit uninstall failed"
  when: uninstall_file.stat.exists == True
