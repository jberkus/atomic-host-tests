---
#
#  This role sets up the replication controller and services for the webserver
#  and database server
#
- name: Fail if kubectl_path is not defined
  when: kubectl_path is not defined
  fail:
    msg: |
      This role requires that `kubectl_path` be defined before it can be used.

- name: Fail if ansible_docker0.ipv4.address is not defined
  when: ansible_docker0.ipv4.address is not defined
  fail:
    msg: "ansible_docker0.ipv4.address it not defined!"
  run_once: true


- name: copy db-rc.yml, db-service.yml, webserver-rc.yml, webserver-service.yml
  copy:
    src: "roles/k8_cluster_services_rc_setup/files/{{ item }}"
    dest: "/root"
    owner: "root"
    group: "root"
    mode: "0644"
  with_items:
    - db-rc.yml
    - db-service.yml
    - webserver-rc.yml
    - webserver-service.yml

- name: insert private registry ip in webserver controller image yml
  replace:
    dest: /root/db-rc.yml
    regexp: 'PRIVATE'
    replace: '{{ ansible_docker0.ipv4.address }}'

- name: insert private registry ip in db controller image yml
  replace:
    dest: /root/webserver-rc.yml
    regexp: 'PRIVATE'
    replace: '{{ ansible_docker0.ipv4.address }}'

- name: wait for kubernetes apiserver to be available
  wait_for:
    port: 8080
    timeout: 120

- name: create db and webserver service
  command: "{{ kubectl_path }} create -f /root/{{ item }}"
  with_items:
    - db-service.yml
    - webserver-service.yml
  ignore_errors: True

- name: create db and webserver replication controller
  command: "{{ kubectl_path }} create -f /root/{{ item }}"
  with_items:
    - db-rc.yml
    - webserver-rc.yml
  ignore_errors: True

- name: verify db pod is running
  shell: "{{ kubectl_path }} get pods | grep db-controller"
  register: output
  until: output.stdout.find("Running") > -1
  retries: 12
  delay: 10

- name: verify webserver-controller is running
  shell: "{{ kubectl_path }} get pods | grep webserver-controller"
  register: output
  until: output.stdout.find("Running") > -1
  retries: 12
  delay: 10
